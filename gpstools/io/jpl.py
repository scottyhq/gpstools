"""
Functions for working with JPL GPS time series

https://sideshow.jpl.nasa.gov/pub/JPL_GPS_Timeseries/repro2018a/raw/position/envseries/0000_README.format

These time series are generated by members of the JPL Geodynamics and 
Space Geodesy Group.  Please see https://gipsy-oasis.jpl.nasa.gov/index.php?page=pppdata for further information.
Suggested acknowledgment:  "JPL repro2011b time series accessed from
ftp://sideshow.jpl.nasa.gov/pub/JPL_GPS_Timeser/repro2011b/raw on
YYYY-MM-DD."

        The time series are relative to each station's first epoch and
        are written in the following format:
        
        Column 1: Decimal_YR computed with 365.25 days/yr
        Columns 2-4: East(m) North(m) Vert(m) 
        Columns 5-7: East_sig(m) North_sig(m) Vert_sig(m) 
        Columns 8-10: East_North_corr, East_Vert_corr, North_Vert_corr
        Column 11: Time in Seconds past J2000
        Columns 12-17: Time in YEAR MM DD HR MN SS
           
        Time is GPS time
"""

import os
import pandas as pd

from pathlib import Path

import datetime
import pandas as pd
import numpy as np
import os.path
import urllib
from pathlib import Path
import sys

datadir = os.path.join(sys.modules['gpstools'].DATADIR, 'jpl')
if not os.path.isdir(datadir):
    os.makedirs(datadir)
auxdir = os.path.join(sys.modules['gpstools'].AUXDIR, 'jpl')

def load_jpl(site):
    """
    Read directly from URL
    """
    url = f"https://sideshow.jpl.nasa.gov/pub/JPL_GPS_Timeseries/repro2018a/raw/position/envseries/{site}.series"
    df = pd.read_csv(url,
                     header=None,
                     names=['decyear',
                            'east',
                            'north',
                            'up',
                            'sig_e',
                            'sig_n',
                            'sig_u',
                            "corr_en",
                            "corr_eu",
                            "corr_nu",
                            "seconds",
                            "year", #YEAR MM DD HR MN SS
                            "month",
                            "day",
                            "hour",
                            "minute",
                            "second",
                     ],
                     delim_whitespace=True,
    )
    # Convert units from [m] to [mm]
    convert = [
        "east",
        "north",
        "up",
        "sig_e",
        "sig_n",
        "sig_u",
        "corr_en",
        "corr_eu",
        "corr_nu",
    ]

    df[convert] = df[convert] * 1e3
    df['date'] =  df[['year','month','day','hour','minute','second']].astype(str).agg('-'.join, axis=1)
    df.index = pd.to_datetime(df.date, format="%Y-%m-%d-%H-%M-%S")

    return df